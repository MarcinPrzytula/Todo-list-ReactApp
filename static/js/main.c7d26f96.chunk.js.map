{"version":3,"sources":["my_toDo/components/AddTask.js","my_toDo/components/Task.js","my_toDo/components/DoneTask.js","my_toDo/components/TaskList.js","my_toDo/components/EditTask.js","my_toDo/App.js","index.js"],"names":["AddTask","handleNewTask","tasks","isImportant","setImportant","validateInput","useState","inputValue","setInputValue","className","value","onChange","e","currentTarget","type","placeholder","onClick","class","Task","name","id","deleteTask","getId","setIsChecked","importantStyle","DoneTask","checkedStyle","isChecked","TaskList","doneTasks","filter","task","activeTasksList","map","doneTasksList","length","EditTask","editTask","isVisible","setIsVisible","onSubmit","preventDefault","taskId","console","log","App","setTasks","counter","setCounter","isEditBoxVisible","setIsEditBoxVisible","setTaskId","isImportantTask","setIsImportantTask","validateInputValue","val","items","replace","trim","alert","find","item","toLowerCase","newTasks","currentTask","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7d26f96.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport '../style/AddTask.css';\r\n\r\nconst AddTask = ({\r\n  handleNewTask,\r\n  tasks,\r\n  isImportant,\r\n  setImportant,\r\n  validateInput,\r\n}) => {\r\n  const [inputValue, setInputValue] =\r\n    useState('');\r\n\r\n  const handleInput = e => {\r\n    setInputValue(e.currentTarget.value);\r\n  };\r\n\r\n  const handleAddTask = () => {\r\n    const value = validateInput(\r\n      inputValue,\r\n      tasks\r\n    );\r\n    if (value) {\r\n      handleNewTask(value, isImportant);\r\n\r\n      if (isImportant) setImportant(!isImportant);\r\n\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  const handleImportant = () => {\r\n    setImportant(!isImportant);\r\n  };\r\n\r\n  return (\r\n    <div className=\"add_container\">\r\n      <input\r\n        value={inputValue}\r\n        onChange={handleInput}\r\n        type=\"text\"\r\n        placeholder=\"Enter your task\"\r\n      />\r\n      <button\r\n        className={'buttonAdd'}\r\n        onClick={handleAddTask}\r\n      >\r\n        {' '}\r\n        <i class=\"far fa-plus-square\"></i>\r\n      </button>\r\n\r\n      <button\r\n        className={`${\r\n          isImportant ? 'important' : null\r\n        } buttonImportant`}\r\n        onClick={handleImportant}\r\n      >\r\n        <i class=\"fas fa-exclamation-circle\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React from 'react';\r\nimport '../style/Task.css';\r\nconst Task = ({\r\n  name,\r\n  id,\r\n  deleteTask,\r\n  getId,\r\n  isImportant,\r\n  setIsChecked,\r\n}) => {\r\n  const importantStyle = isImportant\r\n    ? 'important'\r\n    : null;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"task\">\r\n        <p className={importantStyle}>{name}</p>{' '}\r\n        <button\r\n          onClick={() => {\r\n            deleteTask(id);\r\n          }}\r\n        >\r\n          <i class=\"far fa-trash-alt\"></i>\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            setIsChecked(id);\r\n          }}\r\n        >\r\n          <i class=\"far fa-check-square\"></i>\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            getId(id);\r\n          }}\r\n        >\r\n          <i class=\"far fa-edit\"></i>\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport '../style/DoneTask.css';\r\n\r\nconst DoneTask = ({\r\n  name,\r\n  id,\r\n  isImportant,\r\n  isChecked,\r\n}) => {\r\n  const importantStyle = isImportant\r\n    ? 'important'\r\n    : null;\r\n\r\n  const checkedStyle = isChecked\r\n    ? 'checked'\r\n    : null;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"task\">\r\n        <p\r\n          className={`${importantStyle} ${checkedStyle}`}\r\n        >\r\n          {name}\r\n        </p>{' '}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DoneTask;\r\n","import React from 'react';\r\nimport Task from './Task';\r\nimport DoneTask from './DoneTask';\r\n\r\nconst TaskList = ({\r\n  tasks,\r\n  deleteTask,\r\n  getId,\r\n  setIsChecked,\r\n}) => {\r\n  const doneTasks = tasks.filter(\r\n    task => task.isChecked\r\n  );\r\n  const activeTasks = tasks.filter(\r\n    task => !task.isChecked\r\n  );\r\n\r\n  const activeTasksList = activeTasks.map(\r\n    ({ name, id, isImportant, isChecked }) => (\r\n      <Task\r\n        name={name}\r\n        id={id}\r\n        key={id}\r\n        deleteTask={deleteTask}\r\n        getId={getId}\r\n        isImportant={isImportant}\r\n        isChecked={isChecked}\r\n        setIsChecked={setIsChecked}\r\n      />\r\n    )\r\n  );\r\n\r\n  const doneTasksList = doneTasks.map(\r\n    ({ name, id, isImportant, isChecked }) => (\r\n      <DoneTask\r\n        name={name}\r\n        id={id}\r\n        key={id}\r\n        isImportant={isImportant}\r\n        isChecked={isChecked}\r\n      />\r\n    )\r\n  );\r\n  return (\r\n    <>\r\n      <p>\r\n        Number of tasks:{' '}\r\n        <span className=\"tasksCounter\">\r\n          {tasks.length}\r\n        </span>\r\n      </p>\r\n      <p>Aktywne zadania:</p>\r\n      {activeTasksList}\r\n      {tasks.length ? (\r\n        <p>\r\n          {doneTasksList.length\r\n            ? 'Taski zrobione'\r\n            : 'Nie zrobiłeś jeszcze żadnego zadania'}\r\n        </p>\r\n      ) : null}\r\n      {doneTasksList}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React, { useState } from 'react';\r\nimport '../style/EditTask.css';\r\n\r\nconst EditTask = ({\r\n  editTask,\r\n  tasks,\r\n  isVisible,\r\n  setIsVisible,\r\n  validateInput,\r\n}) => {\r\n  const [inputValue, setInputValue] =\r\n    useState('');\r\n\r\n  const handleChange = e => {\r\n    setInputValue(e.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const value = validateInput(\r\n      inputValue,\r\n      tasks\r\n    );\r\n\r\n    const taskId = e.currentTarget;\r\n    console.log(taskId);\r\n    // const idTask = tasks.find(\r\n    //   ({ id: task }) => task === id\r\n    // );\r\n\r\n    if (value) {\r\n      editTask(inputValue);\r\n\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setIsVisible(false);\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className={`blurWrapper ${\r\n          isVisible ? 'show' : ''\r\n        }`}\r\n      >\r\n        <div className=\"formWrapper\">\r\n          <form\r\n            onSubmit={handleSubmit}\r\n            name=\"send\"\r\n          >\r\n            <input\r\n              onChange={handleChange}\r\n              value={inputValue}\r\n              type=\"text\"\r\n            />\r\n            <button className=\"saveButton\">\r\n              <i class=\"far fa-save\"></i>\r\n            </button>\r\n          </form>\r\n          <button\r\n            className=\"quit\"\r\n            onClick={handleClick}\r\n          >\r\n            <i class=\"far fa-times-circle\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n","import React, { useState } from 'react';\r\nimport AddTask from './components/AddTask';\r\nimport TaskList from './components/TaskList';\r\nimport EditTask from './components/EditTask';\r\nimport './style/App.css';\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [counter, setCounter] = useState(0);\r\n  const [isEditBoxVisible, setIsEditBoxVisible] =\r\n    useState(false);\r\n  const [taskId, setTaskId] = useState('');\r\n  const [isImportantTask, setIsImportantTask] =\r\n    useState(false);\r\n  //   let currentId = '' - jebało sie w chuj jak bylo zamiast taskId;\r\n\r\n  const getId = id => {\r\n    setTaskId(id);\r\n    setIsEditBoxVisible(true);\r\n  };\r\n\r\n  const editTask = value => {\r\n    if (taskId === '')\r\n      return alert(\r\n        'najpierw wybierz zadanie do edycji!'\r\n      );\r\n    const currentTask = tasks.find(\r\n      task => task.id === taskId\r\n    );\r\n\r\n    // currentTask?.name = actuallyValue; nie działa :(\r\n\r\n    if (currentTask) {\r\n      currentTask.name = value;\r\n    }\r\n\r\n    setTasks([...tasks]);\r\n    setIsEditBoxVisible(false);\r\n  };\r\n\r\n  const deleteTask = id => {\r\n    setTasks(\r\n      tasks.filter(task => task.id !== id)\r\n    );\r\n  };\r\n  const handleTaskChecked = id => {\r\n    const newTasks = tasks.map(task => {\r\n      if (task.id === id) {\r\n        task.isChecked = !task.isChecked;\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const handleNewTask = (name, isImportant) => {\r\n    const task = {\r\n      name,\r\n      id: counter,\r\n      isImportant,\r\n      isChecked: false,\r\n    };\r\n\r\n    setTasks([...tasks, task]);\r\n    setCounter(counter + 1);\r\n  };\r\n\r\n  const validateInputValue = (val, items) => {\r\n    let value = val\r\n      .replace('>', '')\r\n      .replace('<', '')\r\n      .trim();\r\n\r\n    if (value.length < 3) {\r\n      alert(\r\n        'Zadanie musi składać się z minimum 3 znaków'\r\n      );\r\n      value = '';\r\n    } else {\r\n      const x = items.find(\r\n        item =>\r\n          item.name.toLowerCase().trim() ===\r\n          value.toLowerCase()\r\n      );\r\n      if (x) {\r\n        alert('To zadanie już jest');\r\n        value = '';\r\n      }\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AddTask\r\n        handleNewTask={handleNewTask}\r\n        tasks={tasks}\r\n        isImportant={isImportantTask}\r\n        setImportant={setIsImportantTask}\r\n        validateInput={validateInputValue}\r\n      />\r\n      <TaskList\r\n        deleteTask={deleteTask}\r\n        getId={getId}\r\n        tasks={tasks}\r\n        setIsChecked={handleTaskChecked}\r\n      />\r\n      <EditTask\r\n        isVisible={isEditBoxVisible}\r\n        setIsVisible={setIsEditBoxVisible}\r\n        editTask={editTask}\r\n        tasks={tasks}\r\n        validateInput={validateInputValue}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './my_toDo/App.js';\n// import App from './kurs_toDo/App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}