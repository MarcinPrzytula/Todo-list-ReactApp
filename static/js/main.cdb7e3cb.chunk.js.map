{"version":3,"sources":["my_toDo_redux/actions/appActions.js","my_toDo_redux/actions/testActions.js","my_toDo_redux/reducers/rootReducer.js","my_toDo_redux/reducers/appReducer.js","my_toDo_redux/reducers/testReducer.js","my_toDo_redux/store/store.js","my_toDo_redux/components/AddTask.js","my_toDo_redux/components/Task.js","my_toDo_redux/components/DoneTask.js","my_toDo_redux/components/TaskList.js","my_toDo_redux/components/EditTask.js","my_toDo_redux/App.js","index.js"],"names":["ADD","DELETE","EDIT","CHECKED","deleteTask","id","type","payload","ID","currentId","value","rootReducer","combineReducers","tasks","state","action","map","currentStateElement","name","isImportant","isChecked","date","filter","finishDate","console","warn","test","isVisible","store","createStore","AddTask","validateInput","useState","inputValue","setInputValue","dateInputValue","setDateInputValue","isImportantTask","setIsImportantTask","dispatch","useDispatch","useSelector","minDate","Date","toISOString","slice","maxDate","parseInt","counter","setCounter","className","onChange","e","currentTarget","placeholder","min","max","onClick","length","alert","addTask","Task","importantStyle","getTime","toLocaleString","setTaskIsChecked","DoneTask","checkedStyle","TaskList","getId","setIsChecked","doneTasks","task","sort","a","b","activeTasks","toLowerCase","activeTasksList","doneTasksList","style","fontSize","EditTask","onSubmit","preventDefault","editTask","App","validateInputValue","val","items","replace","trim","find","item","ReactDOM","render","document","getElementById"],"mappings":"qSAAaA,EAAM,WACNC,EAAS,SACTC,EAAO,OACPC,EAAU,UAmBVC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAH,MAAa,CACrCC,KAAML,EACNM,QAAS,CACPF,QCzBSG,EAAK,KAGLC,EAAY,SAAC,GAAD,IAAGJ,EAAH,EAAGA,GAAIK,EAAP,EAAOA,MAAP,MAAoB,CAC3CJ,KAAME,EACND,QAAS,CACPF,KACAK,WCFSC,EAAcC,YAAgB,CACzCC,MCCwB,WAGpB,IAFJC,EAEG,uDAFK,GACRC,EACG,uCACH,OAAQA,EAAOT,MACb,KAAKN,EACH,MAAM,GAAN,mBAAWc,GAAX,CAAkBC,EAAOR,UAC3B,KAAKL,EACH,OAAOY,EAAME,KAAI,SAAAC,GACf,OACEA,EAAoBZ,KACpBU,EAAOR,QAAQF,GAERY,EAUF,CACLC,KARgBH,EAAOR,QAAjBG,MASNL,GAHEY,EAJFZ,GAQAc,YAJEF,EAHFE,YAQAC,UALEH,EAFFG,UAQAC,KANEJ,EADFI,SAUN,KAAKpB,EACH,OAAOa,EAAMQ,QACX,SAAAL,GAAmB,OACjBA,EAAoBZ,KACpBU,EAAOR,QAAQF,MAErB,KAAKF,EACH,OAAOW,EAAME,KAAI,SAAAC,GACf,OACEA,EAAoBZ,KACpBU,EAAOR,QAAQF,GAERY,EAaF,CACLC,KALED,EALFC,KAWAb,GANEY,EAJFZ,GAWAc,YAPEF,EAHFE,YAWAC,WAREH,EAFFG,UAWAC,KATEJ,EADFI,KAWAE,WARqBR,EAAOR,QAAtBgB,eAWZ,QAKE,OAJAC,QAAQC,KAAR,8BACyBV,EAAOT,OAGzBQ,IDtEXY,KELyB,WAGrB,IAFJZ,EAEG,uDAFK,GACRC,EACG,uCACH,OAAQA,EAAOT,MACb,KAAKE,EACH,MAAO,CACLH,GAAIU,EAAOR,QAAQF,GACnBsB,UAAWZ,EAAOR,QAAQG,OAE9B,QAKE,OAJAc,QAAQC,KAAR,8BACyBV,EAAOT,OAGzBQ,MCREc,EAFDC,YAAYlB,G,sBCkGXmB,EAlGC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACjB,EACEC,mBAAS,IADX,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,EACEF,mBAAS,IADX,mBAAOG,EAAP,KAAuBC,EAAvB,KAGA,EACEJ,oBAAS,GADX,mBAAOK,EAAP,KAAwBC,EAAxB,KAGMC,EAAWC,cACX3B,EAAQ4B,aAAY,SAAAb,GAAK,OAAIA,EAAMf,SAEnC6B,GAAU,IAAIC,MACjBC,cACAC,MAAM,EAAG,IACNC,EAAO,UACXC,SAASL,EAAQG,MAAM,EAAG,IAAM,EADrB,UAIb,EAA8Bb,mBAAS,GAAvC,mBAAOgB,EAAP,KAAgBC,EAAhB,KAiCA,OACE,sBAAKC,UAAU,gBAAf,UACE,uBACExC,MAAOuB,EACPkB,SAAU,SAAAC,GACRlB,EAAckB,EAAEC,cAAc3C,QAEhCJ,KAAK,OACLgD,YAAY,oBAGd,sBAAKJ,UAAU,gBAAf,UACE,sDAAwB,IACxB,uBACE5C,KAAK,OACLiD,IAAKb,EACLc,IAAKV,EACLpC,MAAOyB,EACPgB,SAAU,SAAAC,GACRhB,EACEgB,EAAEC,cAAc3C,aAMxB,yBACEwC,UAAW,YACXO,QA3DgB,WACpB,IAAM/C,EAAQqB,EACZE,EACApB,GAGF,GAA8B,IAA1BsB,EAAeuB,OACjB,OAAOC,MAAM,wCACXjD,IASF6B,ENvCiB,SAAC,GAAD,IACrBrB,EADqB,EACrBA,KACAb,EAFqB,EAErBA,GACAc,EAHqB,EAGrBA,YACAE,EAJqB,EAIrBA,KAJqB,MAKhB,CACLf,KAAMN,EACNO,QAAS,CACPW,OACAb,KACAc,cACAC,WAAW,EACXC,SM2BWuC,CARI,CACX1C,KAAMR,EACNL,GAAI2C,EACJ7B,YAAakB,EACbjB,WAAW,EACXC,KAAMc,KAIRc,EAAWD,EAAU,IAGnBX,GACFC,GAAoBD,GAEtBH,EAAc,KAiCZ,UAIG,IACD,mBAAGgB,UAAU,0BAGf,wBACEA,UAAS,UACPb,EAAkB,YAAc,KADzB,oBAGToB,QA1CkB,WACtBnB,GAAoBD,IAqClB,SAME,mBAAGa,UAAU,oCCvCNW,G,MAjDF,SAAC,GAKP,IAJL3C,EAII,EAJJA,KACAb,EAGI,EAHJA,GACAc,EAEI,EAFJA,YACAE,EACI,EADJA,KAEMkB,EAAWC,cAgBXsB,EAAiB3C,EACnB,YACA,KACJ,OACE,mCACE,sBAAK+B,UAAU,OAAf,UACE,oBAAGA,UAAWY,EAAd,UACG5C,EADH,oBACqBG,EADrB,OAEK,IACL,wBACEoC,QAAS,WACPlB,EAASnC,EAAW,CAAEC,SAF1B,SAKE,mBAAG6C,UAAU,uBAEf,wBAAQO,QA9BY,WACxB,IAAMlC,EAAa,IAAIoB,MACrB,IAAIA,MAAOoB,WACXC,iBAEFzB,EPa4B,SAAC,GAAD,IAC9BlC,EAD8B,EAC9BA,GACAkB,EAF8B,EAE9BA,WAF8B,MAGzB,CACLjB,KAAMH,EACNI,QAAS,CAAEF,KAAIkB,eOjBX0C,CAAiB,CAAE5D,KAAIkB,iBAwBrB,SACE,mBAAG2B,UAAU,0BAEf,wBAAQO,QAvBU,WACtBlB,EAAS9B,EAAU,CAAEJ,KAAIK,OAAO,MAsB5B,SACE,mBAAGwC,UAAU,yBCVRgB,G,MAtCE,SAAC,GAOX,IANLhD,EAMI,EANJA,KACAC,EAKI,EALJA,YACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,KACAE,EAEI,EAFJA,WACAlB,EACI,EADJA,GAEMkC,EAAWC,cAEXsB,EAAiB3C,EACnB,YACA,KAEEgD,EAAe/C,EACjB,UACA,KACJ,OACE,mCACE,sBAAK8B,UAAU,OAAf,UACE,oBACEA,UAAS,UAAKY,EAAL,YAAuBK,GADlC,UAGGjD,EAHH,oBAGqBG,EAHrB,gBAIGE,KACE,IACL,wBACEkC,QAAS,WACPlB,EAASnC,EAAW,CAAEC,SAF1B,SAKE,mBAAG6C,UAAU,8BCwERkB,EAtGE,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aACnBzD,EAAQ4B,aAAY,SAAAb,GAAK,OAAIA,EAAMf,SAEnC0D,EAAY1D,EAAMS,QACtB,SAAAkD,GAAI,OAAIA,EAAKpD,aAGXmD,EAAUb,QAAU,GACtBa,EAAUE,MAAK,SAACC,EAAGC,GACjB,OAAID,EAAEnD,WAAaoD,EAAEpD,WACZ,EAELmD,EAAEnD,WAAaoD,EAAEpD,YACX,EAEH,KAIX,IAAMqD,EAAc/D,EAAMS,QACxB,SAAAkD,GAAI,OAAKA,EAAKpD,aAEZwD,EAAYlB,QAAU,GACxBkB,EAAYH,MAAK,SAACC,EAAGC,GAInB,OAHAD,EAAIA,EAAExD,KAAK2D,gBACXF,EAAIA,EAAEzD,KAAK2D,gBAEQ,EACfH,EAAIC,EAAU,EACX,KAIX,IAAMG,EAAkBF,EAAY5D,KAClC,gBACEE,EADF,EACEA,KACAb,EAFF,EAEEA,GACAc,EAHF,EAGEA,YACAC,EAJF,EAIEA,UACAC,EALF,EAKEA,KALF,OAOE,cAAC,EAAD,CACEH,KAAMA,EACNb,GAAIA,EAEJgE,MAAOA,EACPlD,YAAaA,EACbC,UAAWA,EACXkD,aAAcA,EACdjD,KAAMA,GALDhB,MAUL0E,EAAgBR,EAAUvD,KAC9B,gBACEE,EADF,EACEA,KACAb,EAFF,EAEEA,GACAc,EAHF,EAGEA,YACAC,EAJF,EAIEA,UACAC,EALF,EAKEA,KACAE,EANF,EAMEA,WANF,OAQE,cAAC,EAAD,CACEL,KAAMA,EACNb,GAAIA,EAEJc,YAAaA,EACbC,UAAWA,EACXC,KAAMA,EACNE,WAAYA,GAJPlB,MAQX,OACE,qCACE,iDACmB,IACjB,sBAAM6C,UAAU,eAAhB,SACGrC,EAAM6C,YAGX,iDACCoB,EACAjE,EAAM6C,OACL,4BACGqB,EAAcrB,OACX,iBACA,wDAEJ,KACHa,EAAUb,OAAS,GAClB,sBAAMsB,MAAO,CAAEC,SAAU,IAAzB,oEAKDF,EAAclC,MAAM,EAAG,OCtBfqC,G,MAxEE,SAAC,GAAuB,IAArBnD,EAAoB,EAApBA,cACZlB,EAAQ4B,aAAY,SAAAb,GAAK,OAAIA,EAAMf,SACnCa,EAAOe,aAAY,SAAAb,GAAK,OAAIA,EAAMF,QAClCa,EAAWC,cAEjB,EACER,mBAAS,IADX,mBAAOC,EAAP,KAAmBC,EAAnB,KAkCA,OACE,mCACE,qBACEgB,UAAS,sBACPxB,EAAKC,UAAY,OAAS,IAF9B,SAKE,sBAAKuB,UAAU,cAAf,UACE,uBACEiC,SApCa,SAAA/B,GACrBA,EAAEgC,iBAEF,IAAM1E,EAAQqB,EACZE,EACApB,GAEF,GAAgB,KAAZa,EAAKrB,GACP,OAAOsD,MACL,uCAGAjD,IACF6B,EVLkB,SAAC,GAAD,IAAGlC,EAAH,EAAGA,GAAIK,EAAP,EAAOA,MAAP,MAAoB,CAC1CJ,KAAMJ,EACNK,QAAS,CACPF,KACAK,UUCW2E,CAAS,CAAEhF,GAAIqB,EAAKrB,GAAIK,WAEjC6B,EACE9B,EAAU,CAAEJ,GAAI,KAAMsB,WAAW,KAEnCO,EAAc,MAmBRhB,KAAK,OAFP,UAIE,uBACEiC,SA5CS,SAAAC,GACnBlB,EAAckB,EAAEC,cAAc3C,QA4CpBA,MAAOuB,EACP3B,KAAK,SAEP,wBAAQ4C,UAAU,aAAlB,SACE,mBAAGA,UAAU,qBAGjB,wBACEA,UAAU,OACVO,QA5BU,WAClBlB,EACE9B,EAAU,CAAEJ,GAAI,KAAMsB,WAAW,MAwB7B,SAIE,mBAAGuB,UAAU,mCCrBVoC,G,MA1CH,WACV,IAAMC,EAAqB,SAACC,EAAKC,GAC/B,IAAI/E,EAAQ8E,EACTE,QAAQ,IAAK,IACbA,QAAQ,IAAK,IACbC,OAECjF,EAAMgD,OAAS,GACjBC,MACE,iEAEFjD,EAAQ,IAEK+E,EAAMG,MACjB,SAAAC,GAAI,OACFA,EAAK3E,KAAK2D,cAAcc,SACxBjF,EAAMmE,mBAGRlB,MAAM,4BACNjD,EAAQ,IAIZ,OAAOA,GAGT,OACE,cAAC,IAAD,CAAUkB,MAAOA,EAAjB,SACE,gCACE,cAAC,EAAD,CACEG,cAAewD,IAEjB,cAAC,EAAD,IACA,cAAC,EAAD,CACExD,cAAewD,WCzBzBO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cdb7e3cb.chunk.js","sourcesContent":["export const ADD = 'ADD_RATE';\r\nexport const DELETE = 'DELETE';\r\nexport const EDIT = 'EDIT';\r\nexport const CHECKED = 'CHECKED';\r\nexport const ID = 'ID';\r\n\r\nexport const addTask = ({\r\n  name,\r\n  id,\r\n  isImportant,\r\n  date,\r\n}) => ({\r\n  type: ADD,\r\n  payload: {\r\n    name,\r\n    id,\r\n    isImportant,\r\n    isChecked: false,\r\n    date,\r\n  },\r\n});\r\n\r\nexport const deleteTask = ({ id }) => ({\r\n  type: DELETE,\r\n  payload: {\r\n    id,\r\n  },\r\n});\r\n\r\nexport const editTask = ({ id, value }) => ({\r\n  type: EDIT,\r\n  payload: {\r\n    id,\r\n    value,\r\n  },\r\n});\r\n\r\nexport const setTaskIsChecked = ({\r\n  id,\r\n  finishDate,\r\n}) => ({\r\n  type: CHECKED,\r\n  payload: { id, finishDate },\r\n});\r\n","export const ID = 'ID';\r\nexport const SWITCH_VISIBLE = 'SWITCH_VISIBLE';\r\n\r\nexport const currentId = ({ id, value }) => ({\r\n  type: ID,\r\n  payload: {\r\n    id,\r\n    value,\r\n  },\r\n});\r\n\r\nexport const switchVisible = ({ value }) => ({\r\n  type: SWITCH_VISIBLE,\r\n  payload: {\r\n    value,\r\n  },\r\n});\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { appReducer } from './appReducer';\r\nimport { testReducer } from './testReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  tasks: appReducer,\r\n  test: testReducer,\r\n});\r\n","import {\r\n  ADD,\r\n  EDIT,\r\n  DELETE,\r\n  CHECKED,\r\n} from '../actions/appActions.js';\r\n\r\nexport const appReducer = (\r\n  state = [],\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ADD:\r\n      return [...state, action.payload];\r\n    case EDIT:\r\n      return state.map(currentStateElement => {\r\n        if (\r\n          currentStateElement.id !==\r\n          action.payload.id\r\n        ) {\r\n          return currentStateElement;\r\n        }\r\n\r\n        const { value } = action.payload;\r\n        const {\r\n          id,\r\n          isImportant,\r\n          isChecked,\r\n          date,\r\n        } = currentStateElement;\r\n        return {\r\n          name: value,\r\n          id,\r\n          isImportant,\r\n          isChecked,\r\n          date,\r\n        };\r\n      });\r\n    case DELETE:\r\n      return state.filter(\r\n        currentStateElement =>\r\n          currentStateElement.id !==\r\n          action.payload.id\r\n      );\r\n    case CHECKED:\r\n      return state.map(currentStateElement => {\r\n        if (\r\n          currentStateElement.id !==\r\n          action.payload.id\r\n        ) {\r\n          return currentStateElement;\r\n        }\r\n\r\n        const {\r\n          name,\r\n          id,\r\n          isImportant,\r\n          isChecked,\r\n          date,\r\n        } = currentStateElement;\r\n\r\n        const { finishDate } = action.payload;\r\n\r\n        return {\r\n          name,\r\n          id,\r\n          isImportant,\r\n          isChecked: !isChecked,\r\n          date,\r\n          finishDate,\r\n        };\r\n      });\r\n    default:\r\n      console.warn(\r\n        `Nie mamy akcji typu ${action.type}`\r\n      );\r\n\r\n      return state;\r\n  }\r\n};\r\n","import { ID } from '../actions/testActions.js';\r\n\r\nexport const testReducer = (\r\n  state = {},\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ID:\r\n      return {\r\n        id: action.payload.id,\r\n        isVisible: action.payload.value,\r\n      };\r\n    default:\r\n      console.warn(\r\n        `Nie mamy akcji typu ${action.type}`\r\n      );\r\n\r\n      return state;\r\n  }\r\n};\r\n","import { createStore } from 'redux';\r\n\r\n// import { appReducer } from '../reducers/appReducer';\r\n\r\n// const store = createStore(appReducer);\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React, { useState } from 'react';\r\nimport '../style/AddTask.css';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTask } from '../actions/appActions';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst AddTask = ({ validateInput }) => {\r\n  const [inputValue, setInputValue] =\r\n    useState('');\r\n  const [dateInputValue, setDateInputValue] =\r\n    useState('');\r\n\r\n  const [isImportantTask, setIsImportantTask] =\r\n    useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const tasks = useSelector(store => store.tasks);\r\n\r\n  const minDate = new Date()\r\n    .toISOString()\r\n    .slice(0, 10);\r\n  const maxDate = `${\r\n    parseInt(minDate.slice(0, 4)) + 1\r\n  }-12-31`;\r\n\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  const handleAddTask = () => {\r\n    const value = validateInput(\r\n      inputValue,\r\n      tasks\r\n    );\r\n\r\n    if (dateInputValue.length === 0)\r\n      return alert('Wybierz datę końca zadania');\r\n    if (value) {\r\n      const task = {\r\n        name: value,\r\n        id: counter,\r\n        isImportant: isImportantTask,\r\n        isChecked: false,\r\n        date: dateInputValue,\r\n      };\r\n\r\n      dispatch(addTask(task));\r\n      setCounter(counter + 1);\r\n    }\r\n\r\n    if (isImportantTask)\r\n      setIsImportantTask(!isImportantTask);\r\n\r\n    setInputValue('');\r\n  };\r\n\r\n  const handleImportant = () => {\r\n    setIsImportantTask(!isImportantTask);\r\n  };\r\n\r\n  return (\r\n    <div className=\"add_container\">\r\n      <input\r\n        value={inputValue}\r\n        onChange={e => {\r\n          setInputValue(e.currentTarget.value);\r\n        }}\r\n        type=\"text\"\r\n        placeholder=\"Enter your task\"\r\n      />\r\n\r\n      <div className=\"dateContainer\">\r\n        <p>Do kiedy zrobić:</p>{' '}\r\n        <input\r\n          type=\"date\"\r\n          min={minDate}\r\n          max={maxDate}\r\n          value={dateInputValue}\r\n          onChange={e => {\r\n            setDateInputValue(\r\n              e.currentTarget.value\r\n            );\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        className={'buttonAdd'}\r\n        onClick={handleAddTask}\r\n      >\r\n        {' '}\r\n        <i className=\"far fa-plus-square\"></i>\r\n      </button>\r\n\r\n      <button\r\n        className={`${\r\n          isImportantTask ? 'important' : null\r\n        } buttonImportant`}\r\n        onClick={handleImportant}\r\n      >\r\n        <i className=\"fas fa-exclamation-circle\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React from 'react';\r\nimport '../style/Task.css';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport {\r\n  deleteTask,\r\n  setTaskIsChecked,\r\n} from '../actions/appActions';\r\n\r\nimport { currentId } from '../actions/testActions';\r\n\r\nconst Task = ({\r\n  name,\r\n  id,\r\n  isImportant,\r\n  date,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleTaskChecked = () => {\r\n    const finishDate = new Date(\r\n      new Date().getTime()\r\n    ).toLocaleString();\r\n\r\n    dispatch(\r\n      setTaskIsChecked({ id, finishDate })\r\n    );\r\n  };\r\n\r\n  const handleEditClick = () => {\r\n    dispatch(currentId({ id, value: true }));\r\n  };\r\n\r\n  const importantStyle = isImportant\r\n    ? 'important'\r\n    : null;\r\n  return (\r\n    <>\r\n      <div className=\"task\">\r\n        <p className={importantStyle}>\r\n          {name} (zrobić do:{date})\r\n        </p>{' '}\r\n        <button\r\n          onClick={() => {\r\n            dispatch(deleteTask({ id }));\r\n          }}\r\n        >\r\n          <i className=\"far fa-trash-alt\"></i>\r\n        </button>\r\n        <button onClick={handleTaskChecked}>\r\n          <i className=\"far fa-check-square\"></i>\r\n        </button>\r\n        <button onClick={handleEditClick}>\r\n          <i className=\"far fa-edit\"></i>\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport '../style/DoneTask.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteTask } from '../actions/appActions';\r\n\r\nconst DoneTask = ({\r\n  name,\r\n  isImportant,\r\n  isChecked,\r\n  date,\r\n  finishDate,\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const importantStyle = isImportant\r\n    ? 'important'\r\n    : null;\r\n\r\n  const checkedStyle = isChecked\r\n    ? 'checked'\r\n    : null;\r\n  return (\r\n    <>\r\n      <div className=\"task\">\r\n        <p\r\n          className={`${importantStyle} ${checkedStyle}`}\r\n        >\r\n          {name} (zrobić do:{date}) - wykonano:\r\n          {finishDate}\r\n        </p>{' '}\r\n        <button\r\n          onClick={() => {\r\n            dispatch(deleteTask({ id }));\r\n          }}\r\n        >\r\n          <i className=\"far fa-trash-alt\"></i>\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DoneTask;\r\n","import React from 'react';\r\nimport Task from './Task';\r\nimport DoneTask from './DoneTask';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst TaskList = ({ getId, setIsChecked }) => {\r\n  const tasks = useSelector(store => store.tasks);\r\n\r\n  const doneTasks = tasks.filter(\r\n    task => task.isChecked\r\n  );\r\n\r\n  if (doneTasks.length >= 2) {\r\n    doneTasks.sort((a, b) => {\r\n      if (a.finishDate < b.finishDate) {\r\n        return 1;\r\n      }\r\n      if (a.finishDate > b.finishDate) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const activeTasks = tasks.filter(\r\n    task => !task.isChecked\r\n  );\r\n  if (activeTasks.length >= 2) {\r\n    activeTasks.sort((a, b) => {\r\n      a = a.name.toLowerCase();\r\n      b = b.name.toLowerCase();\r\n\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const activeTasksList = activeTasks.map(\r\n    ({\r\n      name,\r\n      id,\r\n      isImportant,\r\n      isChecked,\r\n      date,\r\n    }) => (\r\n      <Task\r\n        name={name}\r\n        id={id}\r\n        key={id}\r\n        getId={getId}\r\n        isImportant={isImportant}\r\n        isChecked={isChecked}\r\n        setIsChecked={setIsChecked}\r\n        date={date}\r\n      />\r\n    )\r\n  );\r\n\r\n  const doneTasksList = doneTasks.map(\r\n    ({\r\n      name,\r\n      id,\r\n      isImportant,\r\n      isChecked,\r\n      date,\r\n      finishDate,\r\n    }) => (\r\n      <DoneTask\r\n        name={name}\r\n        id={id}\r\n        key={id}\r\n        isImportant={isImportant}\r\n        isChecked={isChecked}\r\n        date={date}\r\n        finishDate={finishDate}\r\n      />\r\n    )\r\n  );\r\n  return (\r\n    <>\r\n      <p>\r\n        Number of tasks:{' '}\r\n        <span className=\"tasksCounter\">\r\n          {tasks.length}\r\n        </span>\r\n      </p>\r\n      <p>Aktywne zadania:</p>\r\n      {activeTasksList}\r\n      {tasks.length ? (\r\n        <p>\r\n          {doneTasksList.length\r\n            ? 'Taski zrobione'\r\n            : 'Nie zrobiłeś jeszcze żadnego zadania'}\r\n        </p>\r\n      ) : null}\r\n      {doneTasks.length > 5 && (\r\n        <span style={{ fontSize: 10 }}>\r\n          wyświetlonych jest jedynie 5 ostatnich\r\n          zadań\r\n        </span>\r\n      )}\r\n      {doneTasksList.slice(0, 5)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React, { useState } from 'react';\r\nimport '../style/EditTask.css';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { editTask } from '../actions/appActions';\r\nimport { currentId } from '../actions/testActions';\r\n\r\nconst EditTask = ({ validateInput }) => {\r\n  const tasks = useSelector(store => store.tasks);\r\n  const test = useSelector(store => store.test);\r\n  const dispatch = useDispatch();\r\n\r\n  const [inputValue, setInputValue] =\r\n    useState('');\r\n\r\n  const handleChange = e => {\r\n    setInputValue(e.currentTarget.value);\r\n  };\r\n\r\n  const handleEditTask = e => {\r\n    e.preventDefault();\r\n\r\n    const value = validateInput(\r\n      inputValue,\r\n      tasks\r\n    );\r\n    if (test.id === '')\r\n      return alert(\r\n        'najpierw wybierz zadanie do edycji!'\r\n      );\r\n\r\n    if (value) {\r\n      dispatch(editTask({ id: test.id, value }));\r\n\r\n      dispatch(\r\n        currentId({ id: null, isVisible: false })\r\n      );\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    dispatch(\r\n      currentId({ id: null, isVisible: false })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className={`blurWrapper ${\r\n          test.isVisible ? 'show' : ''\r\n        }`}\r\n      >\r\n        <div className=\"formWrapper\">\r\n          <form\r\n            onSubmit={handleEditTask}\r\n            name=\"send\"\r\n          >\r\n            <input\r\n              onChange={handleChange}\r\n              value={inputValue}\r\n              type=\"text\"\r\n            />\r\n            <button className=\"saveButton\">\r\n              <i className=\"far fa-save\"></i>\r\n            </button>\r\n          </form>\r\n          <button\r\n            className=\"quit\"\r\n            onClick={handleClick}\r\n          >\r\n            <i className=\"far fa-times-circle\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store';\r\n\r\nimport AddTask from './components/AddTask';\r\nimport TaskList from './components/TaskList';\r\nimport EditTask from './components/EditTask';\r\n\r\nimport './style/App.css';\r\n\r\nconst App = () => {\r\n  const validateInputValue = (val, items) => {\r\n    let value = val\r\n      .replace('>', '')\r\n      .replace('<', '')\r\n      .trim();\r\n\r\n    if (value.length < 3) {\r\n      alert(\r\n        'Zadanie musi składać się z minimum 3 znaków'\r\n      );\r\n      value = '';\r\n    } else {\r\n      const task = items.find(\r\n        item =>\r\n          item.name.toLowerCase().trim() ===\r\n          value.toLowerCase()\r\n      );\r\n      if (task) {\r\n        alert('To zadanie już jest');\r\n        value = '';\r\n      }\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <div>\r\n        <AddTask\r\n          validateInput={validateInputValue}\r\n        />\r\n        <TaskList />\r\n        <EditTask\r\n          validateInput={validateInputValue}\r\n        />\r\n      </div>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import './index.css';\r\n// import App from './my_toDo/App.js';\r\n// // import App from './kurs_toDo/App.js';\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <App />\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './my_toDo_redux/App.js';\r\n// import App from './redux/App.js';\r\n// import App from './kurs_toDo/App.js';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}