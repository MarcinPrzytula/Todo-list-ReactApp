{"version":3,"sources":["style/DoneTask.module.css","style/Task.module.css","style/App.module.css","actions/appActions.js","reducers/appReducer.js","actions/testActions.js","reducers/rootReducer.js","reducers/testReducer.js","store/store.js","components/AddTask.js","components/Task.js","components/DoneTask.js","components/TaskList.js","components/EditTask.js","App.js","index.js","style/EditTask.module.css","style/AddTask.module.css","style/TaskList.module.css"],"names":["module","exports","ADD","DELETE","EDIT","CHECKED","deleteTask","id","type","payload","edit","state","action","map","currentStateElement","name","value","isImportant","isChecked","date","ID","currentId","rootReducer","combineReducers","tasks","filter","finishDate","console","warn","test","isVisible","store","createStore","AddTask","validateInput","useState","inputValue","setInputValue","dateInputValue","setDateInputValue","isImportantTask","setIsImportantTask","dispatch","useDispatch","useSelector","minDate","Date","toISOString","slice","maxDate","parseInt","counter","setCounter","className","styles","add_container","onChange","e","currentTarget","placeholder","activeButtonImportant","buttonImportant","onClick","dateContainer","min","max","buttonAdd","length","alert","addTask","Task","importantStyle","task","getTime","toLocaleString","setTaskIsChecked","DoneTask","important","checkedStyle","checked","TaskList","getId","setIsChecked","doneTasks","sort","a","b","activeTasks","toLowerCase","activeTasksList","doneTasksList","taskList_container","numberOfTasks","tasksCounter","style","fontSize","EditTask","blurWrapper","show","formWrapper","onSubmit","preventDefault","editTask","menuWrapper","saveButton","quit","App","validateInputValue","val","items","replace","trim","find","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10f6d53a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"checked\":\"DoneTask_checked__2AE3a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task_task__1qfQi\",\"important\":\"Task_important__2KgCS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__1Z_Vm\"};","export const ADD = 'ADD_RATE';\r\nexport const DELETE = 'DELETE';\r\nexport const EDIT = 'EDIT';\r\nexport const CHECKED = 'CHECKED';\r\nexport const ID = 'ID';\r\n\r\nexport const addTask = ({\r\n  name,\r\n  id,\r\n  isImportant,\r\n  date,\r\n}) => ({\r\n  type: ADD,\r\n  payload: {\r\n    name,\r\n    id,\r\n    isImportant,\r\n    isChecked: false,\r\n    date,\r\n  },\r\n});\r\n\r\nexport const deleteTask = ({ id }) => ({\r\n  type: DELETE,\r\n  payload: {\r\n    id,\r\n  },\r\n});\r\n\r\nexport const editTask = ({ id, value }) => ({\r\n  type: EDIT,\r\n  payload: {\r\n    id,\r\n    value,\r\n  },\r\n});\r\n\r\nexport const setTaskIsChecked = ({\r\n  id,\r\n  finishDate,\r\n}) => ({\r\n  type: CHECKED,\r\n  payload: { id, finishDate },\r\n});\r\n","import {\r\n  ADD,\r\n  EDIT,\r\n  DELETE,\r\n  CHECKED,\r\n} from '../actions/appActions.js';\r\n\r\nconst edit = (state, action) => {\r\n  return state.map(currentStateElement => {\r\n    if (\r\n      currentStateElement.id !== action.payload.id\r\n    ) {\r\n      return currentStateElement;\r\n    }\r\n\r\n    const { value } = action.payload;\r\n    const { id, isImportant, isChecked, date } =\r\n      currentStateElement;\r\n    return {\r\n      name: value,\r\n      id,\r\n      isImportant,\r\n      isChecked,\r\n      date,\r\n    };\r\n  });\r\n};\r\n\r\nexport const appReducer = (\r\n  state = [],\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ADD:\r\n      return [...state, action.payload];\r\n    case EDIT:\r\n      return edit(state, action);\r\n    case DELETE:\r\n      return state.filter(\r\n        currentStateElement =>\r\n          currentStateElement.id !==\r\n          action.payload.id\r\n      );\r\n    case CHECKED:\r\n      return state.map(currentStateElement => {\r\n        if (\r\n          currentStateElement.id !==\r\n          action.payload.id\r\n        ) {\r\n          return currentStateElement;\r\n        }\r\n\r\n        const {\r\n          name,\r\n          id,\r\n          isImportant,\r\n          isChecked,\r\n          date,\r\n        } = currentStateElement;\r\n\r\n        const { finishDate } = action.payload;\r\n\r\n        return {\r\n          name,\r\n          id,\r\n          isImportant,\r\n          isChecked: !isChecked,\r\n          date,\r\n          finishDate,\r\n        };\r\n      });\r\n    default:\r\n      console.warn(\r\n        `Nie mamy akcji typu ${action.type}`\r\n      );\r\n\r\n      return state;\r\n  }\r\n};\r\n","export const ID = 'ID';\r\nexport const SWITCH_VISIBLE = 'SWITCH_VISIBLE';\r\n\r\nexport const currentId = ({ id, value }) => ({\r\n  type: ID,\r\n  payload: {\r\n    id,\r\n    value,\r\n  },\r\n});\r\n\r\nexport const switchVisible = ({ value }) => ({\r\n  type: SWITCH_VISIBLE,\r\n  payload: {\r\n    value,\r\n  },\r\n});\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { appReducer } from './appReducer';\r\nimport { testReducer } from './testReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  tasks: appReducer,\r\n  test: testReducer,\r\n});\r\n","import { ID } from '../actions/testActions.js';\r\n\r\nexport const testReducer = (\r\n  state = {},\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ID:\r\n      return {\r\n        id: action.payload.id,\r\n        isVisible: action.payload.value,\r\n      };\r\n    default:\r\n      console.warn(\r\n        `Nie mamy akcji typu ${action.type}`\r\n      );\r\n\r\n      return state;\r\n  }\r\n};\r\n","import { createStore } from 'redux';\r\n\r\n// import { appReducer } from '../reducers/appReducer';\r\n\r\n// const store = createStore(appReducer);\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React, { useState } from 'react';\r\nimport styles from '../style/AddTask.module.css';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTask } from '../actions/appActions';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst AddTask = ({ validateInput }) => {\r\n  const [inputValue, setInputValue] =\r\n    useState('');\r\n  const [dateInputValue, setDateInputValue] =\r\n    useState('');\r\n\r\n  const [isImportantTask, setIsImportantTask] =\r\n    useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const tasks = useSelector(store => store.tasks);\r\n\r\n  const minDate = new Date()\r\n    .toISOString()\r\n    .slice(0, 10);\r\n  const maxDate = `${\r\n    parseInt(minDate.slice(0, 4)) + 1\r\n  }-12-31`;\r\n\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  const handleAddTask = () => {\r\n    const value = validateInput(\r\n      inputValue,\r\n      tasks\r\n    );\r\n\r\n    if (dateInputValue.length === 0)\r\n      return alert('Wybierz datę końca zadania');\r\n    if (value) {\r\n      const task = {\r\n        name: value,\r\n        id: counter,\r\n        isImportant: isImportantTask,\r\n        isChecked: false,\r\n        date: dateInputValue,\r\n      };\r\n\r\n      dispatch(addTask(task));\r\n      setCounter(counter + 1);\r\n    }\r\n\r\n    if (isImportantTask)\r\n      setIsImportantTask(!isImportantTask);\r\n\r\n    setInputValue('');\r\n  };\r\n\r\n  const handleImportant = () => {\r\n    setIsImportantTask(!isImportantTask);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.add_container}>\r\n      <input\r\n        value={inputValue}\r\n        onChange={e => {\r\n          setInputValue(e.currentTarget.value);\r\n        }}\r\n        type=\"text\"\r\n        placeholder=\"Wprowadź nazwę zadania\"\r\n      />\r\n      <button\r\n        className={`${\r\n          isImportantTask\r\n            ? styles.activeButtonImportant\r\n            : null\r\n        } ${styles.buttonImportant}`}\r\n        onClick={handleImportant}\r\n      >\r\n        {isImportantTask ? (\r\n          <div>\r\n            {' '}\r\n            <p>Zadanie priorytetowe</p>{' '}\r\n            <i className=\"fas fa-exclamation-circle\"></i>\r\n          </div>\r\n        ) : (\r\n          <p>Zadanie normalne</p>\r\n        )}\r\n      </button>\r\n      <div className={styles.dateContainer}>\r\n        <p>Do kiedy zrobić:</p>{' '}\r\n        <input\r\n          type=\"date\"\r\n          min={minDate}\r\n          max={maxDate}\r\n          value={dateInputValue}\r\n          onChange={e => {\r\n            setDateInputValue(\r\n              e.currentTarget.value\r\n            );\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        className={styles.buttonAdd}\r\n        onClick={handleAddTask}\r\n      >\r\n        <div>\r\n          <p>Dodaj zadanie</p>\r\n          <i className=\"far fa-plus-square\"></i>\r\n        </div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React from 'react';\r\nimport styles from '../style/Task.module.css';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport {\r\n  deleteTask,\r\n  setTaskIsChecked,\r\n} from '../actions/appActions';\r\n\r\nimport { currentId } from '../actions/testActions';\r\n\r\nconst Task = ({\r\n  name,\r\n  id,\r\n  isImportant,\r\n  date,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleTaskChecked = () => {\r\n    const finishDate = new Date(\r\n      new Date().getTime()\r\n    ).toLocaleString();\r\n\r\n    dispatch(\r\n      setTaskIsChecked({ id, finishDate })\r\n    );\r\n  };\r\n\r\n  const handleEditClick = () => {\r\n    dispatch(currentId({ id, value: true }));\r\n  };\r\n\r\n  const importantStyle = isImportant\r\n    ? 'important'\r\n    : null;\r\n  return (\r\n    <>\r\n      <div className={styles.task}>\r\n        <p className={importantStyle}>\r\n          {name} (zrobić do:{date})\r\n        </p>{' '}\r\n        <button\r\n          onClick={() => {\r\n            dispatch(deleteTask({ id }));\r\n          }}\r\n        >\r\n          <i className=\"far fa-trash-alt\"></i>\r\n        </button>\r\n        <button onClick={handleTaskChecked}>\r\n          <i className=\"far fa-check-square\"></i>\r\n        </button>\r\n        <button onClick={handleEditClick}>\r\n          <i className=\"far fa-edit\"></i>\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport styles from '../style/DoneTask.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteTask } from '../actions/appActions';\r\n\r\nconst DoneTask = ({\r\n  name,\r\n  isImportant,\r\n  isChecked,\r\n  date,\r\n  finishDate,\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const importantStyle = isImportant\r\n    ? styles.important\r\n    : null;\r\n\r\n  const checkedStyle = isChecked\r\n    ? styles.checked\r\n    : null;\r\n  return (\r\n    <>\r\n      <div className={styles.task}>\r\n        <p\r\n          className={`${importantStyle} ${checkedStyle}`}\r\n        >\r\n          {name} (zrobić do:{date}) - wykonano:\r\n          {finishDate}\r\n        </p>{' '}\r\n        <button\r\n          onClick={() => {\r\n            dispatch(deleteTask({ id }));\r\n          }}\r\n        >\r\n          <i className=\"far fa-trash-alt\"></i>\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DoneTask;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport styles from '../style/TaskList.module.css';\r\n\r\nimport Task from './Task';\r\nimport DoneTask from './DoneTask';\r\n\r\nconst TaskList = ({ getId, setIsChecked }) => {\r\n  const tasks = useSelector(store => store.tasks);\r\n\r\n  const doneTasks = tasks.filter(\r\n    task => task.isChecked\r\n  );\r\n\r\n  if (doneTasks.length >= 2) {\r\n    doneTasks.sort((a, b) => {\r\n      if (a.finishDate < b.finishDate) {\r\n        return 1;\r\n      }\r\n      if (a.finishDate > b.finishDate) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const activeTasks = tasks.filter(\r\n    task => !task.isChecked\r\n  );\r\n  if (activeTasks.length >= 2) {\r\n    activeTasks.sort((a, b) => {\r\n      a = a.name.toLowerCase();\r\n      b = b.name.toLowerCase();\r\n\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const activeTasksList = activeTasks.map(\r\n    ({\r\n      name,\r\n      id,\r\n      isImportant,\r\n      isChecked,\r\n      date,\r\n    }) => (\r\n      <Task\r\n        name={name}\r\n        id={id}\r\n        key={id}\r\n        getId={getId}\r\n        isImportant={isImportant}\r\n        isChecked={isChecked}\r\n        setIsChecked={setIsChecked}\r\n        date={date}\r\n      />\r\n    )\r\n  );\r\n\r\n  const doneTasksList = doneTasks.map(\r\n    ({\r\n      name,\r\n      id,\r\n      isImportant,\r\n      isChecked,\r\n      date,\r\n      finishDate,\r\n    }) => (\r\n      <DoneTask\r\n        name={name}\r\n        id={id}\r\n        key={id}\r\n        isImportant={isImportant}\r\n        isChecked={isChecked}\r\n        date={date}\r\n        finishDate={finishDate}\r\n      />\r\n    )\r\n  );\r\n  return (\r\n    <div className={styles.taskList_container}>\r\n      <div className={styles.numberOfTasks}>\r\n        <p>\r\n          Liczba zadań:{' '}\r\n          <span className={styles.tasksCounter}>\r\n            {tasks.length}\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <p className={styles.activeTasks}>\r\n        {activeTasksList.length\r\n          ? 'Zadania do wykonania:'\r\n          : 'Nie masz zadań do zrobienia'}\r\n      </p>\r\n      <div>{activeTasksList}</div>\r\n      {tasks.length ? (\r\n        <div className={styles.doneTasks}>\r\n          <p>\r\n            {doneTasksList.length\r\n              ? 'Wykonane zadania:'\r\n              : 'Nie wykonałeś jeszcze żadnego zadania'}\r\n          </p>\r\n        </div>\r\n      ) : null}\r\n      {doneTasks.length > 5 && (\r\n        <span style={{ fontSize: 10 }}>\r\n          Wyświetlonych jest jedynie 5 ostatnich\r\n          zadań\r\n        </span>\r\n      )}\r\n      {doneTasksList.slice(0, 5)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React, { useState } from 'react';\r\nimport styles from '../style/EditTask.module.css';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { editTask } from '../actions/appActions';\r\nimport { currentId } from '../actions/testActions';\r\n\r\nconst EditTask = ({ validateInput }) => {\r\n  const tasks = useSelector(store => store.tasks);\r\n  const test = useSelector(store => store.test);\r\n  const dispatch = useDispatch();\r\n\r\n  const [inputValue, setInputValue] =\r\n    useState('');\r\n\r\n  const handleChange = e => {\r\n    setInputValue(e.currentTarget.value);\r\n  };\r\n\r\n  const handleEditTask = e => {\r\n    e.preventDefault();\r\n\r\n    const value = validateInput(\r\n      inputValue,\r\n      tasks\r\n    );\r\n    if (test.id === '')\r\n      return alert(\r\n        'najpierw wybierz zadanie do edycji!'\r\n      );\r\n\r\n    if (value) {\r\n      dispatch(editTask({ id: test.id, value }));\r\n\r\n      dispatch(\r\n        currentId({ id: null, isVisible: false })\r\n      );\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    dispatch(\r\n      currentId({ id: null, isVisible: false })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className={`${styles.blurWrapper} ${\r\n          test.isVisible ? styles.show : null\r\n        }`}\r\n      >\r\n        <div className={styles.formWrapper}>\r\n          <form\r\n            onSubmit={handleEditTask}\r\n            name=\"send\"\r\n          >\r\n            <div className={styles.menuWrapper}>\r\n              <input\r\n                onChange={handleChange}\r\n                value={inputValue}\r\n                type=\"text\"\r\n                placeholder=\"Wprowadź nową nazwę zadania\"\r\n              />\r\n              <button\r\n                className={styles.saveButton}\r\n              >\r\n                <i className=\"far fa-save\"></i>\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <button\r\n            className={styles.quit}\r\n            onClick={handleClick}\r\n          >\r\n            <i className=\"far fa-times-circle\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store';\r\n\r\nimport AddTask from './components/AddTask';\r\nimport TaskList from './components/TaskList';\r\nimport EditTask from './components/EditTask';\r\n\r\nimport styles from './style/App.module.css';\r\n\r\nconst App = () => {\r\n  const validateInputValue = (val, items) => {\r\n    let value = val\r\n      .replace('>', '')\r\n      .replace('<', '')\r\n      .trim();\r\n\r\n    if (value.length < 3) {\r\n      alert(\r\n        'Zadanie musi składać się z minimum 3 znaków'\r\n      );\r\n      value = '';\r\n    } else {\r\n      const task = items.find(\r\n        item =>\r\n          item.name.toLowerCase().trim() ===\r\n          value.toLowerCase()\r\n      );\r\n      if (task) {\r\n        alert('To zadanie już jest');\r\n        value = '';\r\n      }\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <div>\r\n        <AddTask\r\n          validateInput={validateInputValue}\r\n        />\r\n        <TaskList />\r\n        <EditTask\r\n          validateInput={validateInputValue}\r\n        />\r\n      </div>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport App from './App.js';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blurWrapper\":\"EditTask_blurWrapper__1lTMP\",\"formWrapper\":\"EditTask_formWrapper__m0GzF\",\"show\":\"EditTask_show__1JX6o\",\"quit\":\"EditTask_quit__xAeXh\",\"menuWrapper\":\"EditTask_menuWrapper__2bH6Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add_container\":\"AddTask_add_container__Iwwm6\",\"buttonImportant\":\"AddTask_buttonImportant__2hdwT\",\"activeButtonImportant\":\"AddTask_activeButtonImportant__2lo3k\",\"buttonAdd\":\"AddTask_buttonAdd__2ohZo\",\"dateContainer\":\"AddTask_dateContainer__2wX1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskList_container\":\"TaskList_taskList_container__36hDT\",\"activeTasks\":\"TaskList_activeTasks__38NbH\",\"numberOfTasks\":\"TaskList_numberOfTasks__1ecFg\",\"doneTasks\":\"TaskList_doneTasks__3ih2C\"};"],"sourceRoot":""}