{"version":3,"sources":["style/AddTask.module.css","style/EditTask.module.css","style/DoneTask.module.css","style/TaskList.module.css","style/Task.module.css","style/App.module.css","actions/appActions.js","reducers/appReducer.js","actions/editPopupActions.js","reducers/rootReducer.js","reducers/editPopupReducer.js","store/store.js","components/AddTask.js","components/Task.js","components/DoneTask.js","components/TaskList.js","components/EditTask.js","App.js","index.js"],"names":["module","exports","ADD","DELETE","EDIT","CHECKED","deleteTask","id","type","payload","edit","state","action","map","currentStateElement","name","value","isImportant","isChecked","date","ID","currentId","rootReducer","combineReducers","tasks","filter","finishDate","console","warn","editPopup","isVisible","store","createStore","AddTask","validateInput","useState","inputValue","setInputValue","dateInputValue","setDateInputValue","isImportantTask","setIsImportantTask","dispatch","useDispatch","useSelector","minDate","Date","toISOString","slice","maxDate","parseInt","counter","setCounter","className","styles","container","input_add","onChange","e","currentTarget","placeholder","button_important","button_important_active","onClick","date_container","min","max","button_add","preventDefault","Math","random","toString","substr","length","alert","addTask","numberOfTasks","tasksCounter","Task","importantStyle","important","task","getTime","toLocaleString","setTaskIsChecked","DoneTask","checkedStyle","checked","TaskList","firstTime","setFirstTime","log","localStorage","JSON","parse","window","getItem","forEach","item","push","setItem","stringify","doneTasks","sort","a","b","activeTasks","toLowerCase","activeTasksList","doneTasksList","taskList_container","activeTasksHead","doneTasksHead","style","fontSize","EditTask","blurWrapper","show","formWrapper","onSubmit","editTask","menuWrapper","saveButton","quit","App","validateInputValue","val","items","replace","trim","find","app","app_container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7fe5ec55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddTask_container__30Z7h\",\"input_add\":\"AddTask_input_add__23vvi\",\"button_important\":\"AddTask_button_important__22svz\",\"date_container\":\"AddTask_date_container__3VVWI\",\"button_important_active\":\"AddTask_button_important_active__2s_fE\",\"button_add\":\"AddTask_button_add__3Rgsp\",\"numberOfTasks\":\"AddTask_numberOfTasks__35aCR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blurWrapper\":\"EditTask_blurWrapper__1lTMP\",\"formWrapper\":\"EditTask_formWrapper__m0GzF\",\"show\":\"EditTask_show__1JX6o\",\"quit\":\"EditTask_quit__xAeXh\",\"menuWrapper\":\"EditTask_menuWrapper__2bH6Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checked\":\"DoneTask_checked__2AE3a\",\"task\":\"DoneTask_task__21ca2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskList_container\":\"TaskList_taskList_container__36hDT\",\"activeTasksHead\":\"TaskList_activeTasksHead__12x50\",\"doneTasksHead\":\"TaskList_doneTasksHead__2YxXN\",\"activeTasksLists\":\"TaskList_activeTasksLists__1-CJE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task_task__1qfQi\",\"important\":\"Task_important__2KgCS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1k8L8\",\"app_container\":\"App_app_container__3T3b6\"};","export const ADD = 'ADD';\r\nexport const DELETE = 'DELETE';\r\nexport const EDIT = 'EDIT';\r\nexport const CHECKED = 'CHECKED';\r\nexport const ID = 'ID';\r\n\r\nexport const addTask = ({\r\n  name,\r\n  id,\r\n  isImportant,\r\n  date,\r\n}) => ({\r\n  type: ADD,\r\n  payload: {\r\n    name,\r\n    id,\r\n    isImportant,\r\n    isChecked: false,\r\n    date,\r\n  },\r\n});\r\n\r\nexport const deleteTask = ({ id }) => ({\r\n  type: DELETE,\r\n  payload: {\r\n    id,\r\n  },\r\n});\r\n\r\nexport const editTask = ({ id, value }) => ({\r\n  type: EDIT,\r\n  payload: {\r\n    id,\r\n    value,\r\n  },\r\n});\r\n\r\nexport const setTaskIsChecked = ({\r\n  id,\r\n  finishDate,\r\n}) => ({\r\n  type: CHECKED,\r\n  payload: { id, finishDate },\r\n});\r\n","import {\r\n  ADD,\r\n  EDIT,\r\n  DELETE,\r\n  CHECKED,\r\n} from '../actions/appActions.js';\r\n\r\nconst edit = (state, action) => {\r\n  return state.map(currentStateElement => {\r\n    if (\r\n      currentStateElement.id !== action.payload.id\r\n    ) {\r\n      return currentStateElement;\r\n    }\r\n\r\n    const { value } = action.payload;\r\n    const { id, isImportant, isChecked, date } =\r\n      currentStateElement;\r\n    return {\r\n      name: value,\r\n      id,\r\n      isImportant,\r\n      isChecked,\r\n      date,\r\n    };\r\n  });\r\n};\r\n\r\nexport const appReducer = (\r\n  state = [],\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ADD:\r\n      return [...state, action.payload];\r\n    case EDIT:\r\n      return edit(state, action);\r\n    case DELETE:\r\n      return state.filter(\r\n        currentStateElement =>\r\n          currentStateElement.id !==\r\n          action.payload.id\r\n      );\r\n    case CHECKED:\r\n      return state.map(currentStateElement => {\r\n        if (\r\n          currentStateElement.id !==\r\n          action.payload.id\r\n        ) {\r\n          return currentStateElement;\r\n        }\r\n\r\n        const {\r\n          name,\r\n          id,\r\n          isImportant,\r\n          isChecked,\r\n          date,\r\n        } = currentStateElement;\r\n\r\n        const { finishDate } = action.payload;\r\n\r\n        return {\r\n          name,\r\n          id,\r\n          isImportant,\r\n          isChecked: !isChecked,\r\n          date,\r\n          finishDate,\r\n        };\r\n      });\r\n    default:\r\n      console.warn(\r\n        `Nie mamy akcji typu ${action.type}`\r\n      );\r\n\r\n      return state;\r\n  }\r\n};\r\n","export const ID = 'ID';\r\nexport const SWITCH_VISIBLE = 'SWITCH_VISIBLE';\r\n\r\nexport const currentId = ({ id, value }) => ({\r\n  type: ID,\r\n  payload: {\r\n    id,\r\n    value,\r\n  },\r\n});\r\n\r\nexport const switchVisible = ({ value }) => ({\r\n  type: SWITCH_VISIBLE,\r\n  payload: {\r\n    value,\r\n  },\r\n});\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { appReducer } from './appReducer';\r\nimport { editPopupReducer } from './editPopupReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  tasks: appReducer,\r\n  editPopup: editPopupReducer,\r\n});\r\n","import { ID } from '../actions/editPopupActions.js';\r\n\r\nexport const editPopupReducer = (\r\n  state = {},\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ID:\r\n      return {\r\n        id: action.payload.id,\r\n        isVisible: action.payload.value,\r\n      };\r\n    default:\r\n      console.warn(\r\n        `We have no action of the type${action.type}`\r\n      );\r\n\r\n      return state;\r\n  }\r\n};\r\n","import { createStore } from 'redux';\r\n\r\n// import { appReducer } from '../reducers/appReducer';\r\n// const store = createStore(appReducer);\r\n\r\nimport { rootReducer } from '../reducers/rootReducer';\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React, { useState } from 'react';\r\n\r\nimport { addTask } from '../actions/appActions';\r\nimport {\r\n  useDispatch,\r\n  useSelector,\r\n} from 'react-redux';\r\n\r\nimport styles from '../style/AddTask.module.css';\r\n\r\nconst AddTask = ({ validateInput }) => {\r\n  const [inputValue, setInputValue] =\r\n    useState('');\r\n\r\n  const [dateInputValue, setDateInputValue] =\r\n    useState('');\r\n\r\n  const [isImportantTask, setIsImportantTask] =\r\n    useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const tasks = useSelector(store => store.tasks);\r\n\r\n  const minDate = new Date()\r\n    .toISOString()\r\n    .slice(0, 10);\r\n  const maxDate = `${\r\n    parseInt(minDate.slice(0, 4)) + 1\r\n  }-12-31`;\r\n\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  const handleAddTask = e => {\r\n    e.preventDefault();\r\n    const value = validateInput(\r\n      inputValue,\r\n      tasks\r\n    );\r\n    const id = Math.random()\r\n      .toString(36)\r\n      .substr(2, 9);\r\n\r\n    if (dateInputValue.length === 0)\r\n      return alert(\r\n        'Select the end date for the task'\r\n      );\r\n    if (value) {\r\n      const task = {\r\n        name: value,\r\n        id: id,\r\n        isImportant: isImportantTask,\r\n        isChecked: false,\r\n        date: dateInputValue,\r\n      };\r\n\r\n      dispatch(addTask(task));\r\n\r\n      setCounter(counter + 1);\r\n    }\r\n\r\n    if (isImportantTask)\r\n      setIsImportantTask(!isImportantTask);\r\n\r\n    setInputValue('');\r\n  };\r\n\r\n  const handleImportant = () => {\r\n    setIsImportantTask(!isImportantTask);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <input\r\n        className={styles.input_add}\r\n        value={inputValue}\r\n        onChange={e => {\r\n          setInputValue(e.currentTarget.value);\r\n        }}\r\n        type=\"text\"\r\n        placeholder=\"Enter the name of the task.\"\r\n      />\r\n      <button\r\n        className={`${styles.button_important} ${\r\n          isImportantTask\r\n            ? styles.button_important_active\r\n            : null\r\n        }`}\r\n        onClick={handleImportant}\r\n      >\r\n        {isImportantTask ? (\r\n          <div>\r\n            <p>Priority task</p>{' '}\r\n          </div>\r\n        ) : (\r\n          <p>Normal task</p>\r\n        )}\r\n      </button>\r\n      <div className={styles.date_container}>\r\n        <p>Perform the task until:</p>{' '}\r\n        <input\r\n          type=\"date\"\r\n          min={minDate}\r\n          max={maxDate}\r\n          value={dateInputValue}\r\n          onChange={e => {\r\n            setDateInputValue(\r\n              e.currentTarget.value\r\n            );\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        className={styles.button_add}\r\n        onClick={handleAddTask}\r\n      >\r\n        <p>Add task</p>\r\n        <span className=\"far fa-plus-square\"></span>\r\n      </button>\r\n      <div className={styles.numberOfTasks}>\r\n        <p>\r\n          Number of tasks:{' '}\r\n          <span className={styles.tasksCounter}>\r\n            {tasks.length}\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport {\r\n  deleteTask,\r\n  setTaskIsChecked,\r\n} from '../actions/appActions';\r\n\r\nimport { currentId } from '../actions/editPopupActions';\r\nimport styles from '../style/Task.module.css';\r\n\r\nconst Task = ({\r\n  name,\r\n  id,\r\n  isImportant,\r\n  date,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleTaskChecked = () => {\r\n    const finishDate = new Date(\r\n      new Date().getTime()\r\n    ).toLocaleString();\r\n\r\n    dispatch(\r\n      setTaskIsChecked({ id, finishDate })\r\n    );\r\n  };\r\n\r\n  const handleEditClick = () => {\r\n    dispatch(currentId({ id, value: true }));\r\n  };\r\n\r\n  const importantStyle = isImportant\r\n    ? styles.important\r\n    : null;\r\n  return (\r\n    <>\r\n      <div className={styles.task}>\r\n        <div className={importantStyle}>\r\n          <p>{name}</p>\r\n          <p>(time to do:{date})</p>\r\n        </div>{' '}\r\n        <button\r\n          onClick={() => {\r\n            dispatch(deleteTask({ id }));\r\n            // const x = JSON.parse(\r\n            //   window.localStorage.tasks\r\n            // );\r\n            // const y = x.find(x => x.id === id);\r\n            // console.log(y);\r\n            // window.localStorage.removeItem(\r\n            //   'tasks'\r\n            // );\r\n          }}\r\n        >\r\n          <span className=\"far fa-trash-alt\"></span>\r\n        </button>\r\n        <button onClick={handleTaskChecked}>\r\n          <span className=\"far fa-check-square\"></span>\r\n        </button>\r\n        <button onClick={handleEditClick}>\r\n          <span className=\"far fa-edit\"></span>\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport styles from '../style/DoneTask.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteTask } from '../actions/appActions';\r\n\r\nconst DoneTask = ({\r\n  name,\r\n  isImportant,\r\n  isChecked,\r\n  date,\r\n  finishDate,\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const importantStyle = isImportant\r\n    ? styles.important\r\n    : null;\r\n\r\n  const checkedStyle = isChecked\r\n    ? styles.checked\r\n    : null;\r\n  return (\r\n    <>\r\n      <div className={styles.task}>\r\n        <div\r\n          className={`${importantStyle} ${checkedStyle}`}\r\n        >\r\n          <p>{name}</p>{' '}\r\n          <button\r\n            onClick={() => {\r\n              dispatch(deleteTask({ id }));\r\n            }}\r\n          >\r\n            <span className=\"far fa-trash-alt\"></span>\r\n          </button>\r\n          <p>\r\n            (time to do: {date}) - done:{' '}\r\n            {finishDate}\r\n          </p>\r\n        </div>{' '}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DoneTask;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Task from './Task';\r\nimport DoneTask from './DoneTask';\r\n\r\nimport styles from '../style/TaskList.module.css';\r\n\r\n// { getId, setIsChecked }\r\n\r\nconst TaskList = () => {\r\n  const tasks = useSelector(store => store.tasks);\r\n\r\n  const [firstTime, setFirstTime] =\r\n    useState(true);\r\n\r\n  console.log(firstTime);\r\n\r\n  const localStorage = JSON.parse(\r\n    window.localStorage.getItem('tasks')\r\n  );\r\n\r\n  if (\r\n    window.localStorage.length > 0 &&\r\n    firstTime\r\n  ) {\r\n    console.log(\r\n      'ładowanie storage do tasks i zmiana flagi na false'\r\n    );\r\n    localStorage.forEach(item =>\r\n      tasks.push(item)\r\n    );\r\n    setFirstTime(false);\r\n  }\r\n  window.localStorage.setItem(\r\n    'tasks',\r\n    JSON.stringify(tasks)\r\n  );\r\n  const doneTasks = tasks.filter(\r\n    task => task.isChecked\r\n  );\r\n\r\n  if (doneTasks.length >= 2) {\r\n    doneTasks.sort((a, b) => {\r\n      if (a.finishDate < b.finishDate) {\r\n        return 1;\r\n      }\r\n      if (a.finishDate > b.finishDate) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const activeTasks = tasks.filter(\r\n    task => !task.isChecked\r\n  );\r\n\r\n  if (activeTasks.length >= 2) {\r\n    activeTasks.sort((a, b) => {\r\n      a = a.name.toLowerCase();\r\n      b = b.name.toLowerCase();\r\n\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const activeTasksList = activeTasks.map(\r\n    ({\r\n      name,\r\n      id,\r\n      isImportant,\r\n      isChecked,\r\n      date,\r\n    }) => (\r\n      <Task\r\n        name={name}\r\n        id={id}\r\n        key={id}\r\n        // getId={getId}\r\n        isImportant={isImportant}\r\n        isChecked={isChecked}\r\n        // setIsChecked={setIsChecked}\r\n        date={date}\r\n      />\r\n    )\r\n  );\r\n\r\n  const doneTasksList = doneTasks.map(\r\n    ({\r\n      name,\r\n      id,\r\n      isImportant,\r\n      isChecked,\r\n      date,\r\n      finishDate,\r\n    }) => (\r\n      <DoneTask\r\n        name={name}\r\n        id={id}\r\n        key={id}\r\n        isImportant={isImportant}\r\n        isChecked={isChecked}\r\n        date={date}\r\n        finishDate={finishDate}\r\n      />\r\n    )\r\n  );\r\n  return (\r\n    <div className={styles.taskList_container}>\r\n      <p className={styles.activeTasksHead}>\r\n        {activeTasksList.length\r\n          ? 'Tasks to be performed:'\r\n          : 'You have no work to do'}\r\n      </p>\r\n      <div>{activeTasksList}</div>\r\n      {tasks.length ? (\r\n        <div className={styles.doneTasksHead}>\r\n          <p>\r\n            {doneTasksList.length\r\n              ? 'Completed tasks:'\r\n              : 'You havent completed any task yet.'}\r\n          </p>\r\n        </div>\r\n      ) : null}\r\n      {doneTasks.length > 5 && (\r\n        <span style={{ fontSize: 10 }}>\r\n          Only the last 5 are displayed tasks\r\n        </span>\r\n      )}\r\n      {doneTasksList.slice(0, 5)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React, { useState } from 'react';\r\nimport styles from '../style/EditTask.module.css';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { editTask } from '../actions/appActions';\r\nimport { currentId } from '../actions/editPopupActions';\r\n\r\nconst EditTask = ({ validateInput }) => {\r\n  const tasks = useSelector(store => store.tasks);\r\n  const editPopup = useSelector(\r\n    store => store.editPopup\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const [inputValue, setInputValue] =\r\n    useState('');\r\n\r\n  const handleChange = e => {\r\n    setInputValue(e.currentTarget.value);\r\n  };\r\n\r\n  const handleEditTask = e => {\r\n    e.preventDefault();\r\n\r\n    const value = validateInput(\r\n      inputValue,\r\n      tasks\r\n    );\r\n    // if (editPopup.id === '')\r\n    //   return alert(\r\n    //     'First select a task to edit.'\r\n    //   );\r\n\r\n    if (value) {\r\n      dispatch(\r\n        editTask({ id: editPopup.id, value })\r\n      );\r\n\r\n      dispatch(\r\n        currentId({ id: null, isVisible: false })\r\n      );\r\n      setInputValue('');\r\n    }\r\n    // const localStorageTask = tasks.find(\r\n    //   task => task.id === editPopup.id\r\n    // );\r\n    // console.log(localStorageTask);\r\n    // window.localStorage.setItem(\r\n    //   editPopup.id,\r\n    //   JSON.stringify(localStorageTask)\r\n    // );\r\n  };\r\n\r\n  const handleClick = () => {\r\n    dispatch(\r\n      currentId({ id: null, isVisible: false })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className={`${styles.blurWrapper} ${\r\n          editPopup.isVisible ? styles.show : null\r\n        }`}\r\n      >\r\n        <div className={styles.formWrapper}>\r\n          <form\r\n            onSubmit={handleEditTask}\r\n            name=\"send\"\r\n          >\r\n            <div className={styles.menuWrapper}>\r\n              <input\r\n                onChange={handleChange}\r\n                value={inputValue}\r\n                type=\"text\"\r\n                placeholder=\"Enter a new name for the task.\"\r\n              />\r\n              <button\r\n                className={styles.saveButton}\r\n              >\r\n                <span className=\"far fa-save\"></span>\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <button\r\n            className={styles.quit}\r\n            onClick={handleClick}\r\n          >\r\n            <i className=\"far fa-times-circle\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store';\r\n\r\nimport AddTask from './components/AddTask';\r\nimport TaskList from './components/TaskList';\r\nimport EditTask from './components/EditTask';\r\n\r\nimport styles from './style/App.module.css';\r\n\r\nconst App = () => {\r\n  const validateInputValue = (val, items) => {\r\n    let value = val\r\n      .replace('>', '')\r\n      .replace('<', '')\r\n      .trim();\r\n\r\n    if (value.length < 3) {\r\n      alert(\r\n        'The task must be at least 3 characters long.'\r\n      );\r\n      value = '';\r\n    } else {\r\n      const task = items.find(\r\n        item =>\r\n          item.name.toLowerCase().trim() ===\r\n          value.toLowerCase()\r\n      );\r\n      if (task) {\r\n        alert('This task is already here.');\r\n        value = '';\r\n      }\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <div className={styles.app}>\r\n        <div className={styles.app_container}>\r\n          <AddTask\r\n            validateInput={validateInputValue}\r\n          />\r\n          <TaskList />\r\n          <EditTask\r\n            validateInput={validateInputValue}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport App from './App.js';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}